/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame, useThree } from '@react-three/fiber'
import * as THREE from 'three'

export function SimpleAstronaut(props) {
  const { nodes, materials } = useGLTF('/assets/3d/small-asturnate.glb')
  const meshRef = useRef()
  const { mouse } = useThree()
  
  // Simple mouse tracking animation
  useFrame(() => {
    if (meshRef.current) {
      // Mouse coordinates are normalized between -1 and 1
      const targetRotationY = mouse.x * 0.3  // Left/right rotation
      const targetRotationX = mouse.y * 0.2  // Up/down rotation
      
      // Apply smooth rotation tracking
      meshRef.current.rotation.y = THREE.MathUtils.lerp(
        meshRef.current.rotation.y,
        targetRotationY,
        0.1
      )
      meshRef.current.rotation.x = THREE.MathUtils.lerp(
        meshRef.current.rotation.x,
        targetRotationX,
        0.1
      )
    }
  })
  
  return (
    <group {...props} dispose={null}>
      <mesh
        ref={meshRef}
        castShadow
        receiveShadow
        geometry={nodes['tripo_node_111858a9-4903-4081-8c9b-62d190723d3f']?.geometry}
        material={materials['tripo_mat_111858a9-4903-4081-8c9b-62d190723d3f']}
        scale={[3, 3, 3]}
        position={[0, 0, 0]}
        rotation={[1, 0, 0]}
      />
    </group>
  )
}

useGLTF.preload('/assets/3d/small-asturnate.glb')
